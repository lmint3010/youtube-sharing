{"version":3,"sources":["components/common/context.js","api.js","hooks/useQuery.js","hooks/useMutation.js","hooks/useForm.js","graphql/queries.js","components/Navbar.js","components/AddVideoModal.js","utils/youtubeUrlParser.js","components/common/ConfirmModal.js","components/ListVideoShared.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","ContextProvider","Consumer","props","useState","auth","status","state","Provider","value","children","useQuery","query","variables","data","loading","setState","runQuery","a","axios","post","api","JSON","stringify","headers","Accept","Authorization","localStorage","getItem","queryResult","refetch","useMutation","callback","upload","mutationResult","useForm","initValue","validations","onSubmit","disable","setDisable","checkError","validator","required","requiredWarning","regex","exec","regexWarning","useEffect","isDirty","Object","keys","filter","key","error","length","handleChange","event","target","name","handleSubmit","preventDefault","dataSubmitFromState","reduce","object","getUser","getAllVideo","login","addUser","addVideo","deleteVideo","Wrapper","styled","div","InputBox","Input","input","Welcome","SubmitBtn","button","Error","toggleModal","userQueried","email","password","queries","loginHook","registerHook","success","user","onClick","removeItem","type","placeholder","onChange","setItem","token","toast","disabled","Backdrop","Form","form","TextArea","textarea","refetchVideoList","addVideoHook","url","title","description","videoId","regexResult","split","getVideoId","BackDrop","Title","h4","Content","p","Button","ButtonBox","Modal","agreeMessage","onClose","onConfirm","className","ListVideo","VideoBox","DeleteBtn","VideoInfo","Desc","Author","modal","opts","height","width","playerVars","autoplay","confirm","setConfirm","_handleConfirm","_id","allVideo","deleteVideoHook","map","video","i","style","margin","AddVideoModal","ConfirmModal","configure","autoClose","App","setModal","_toggleModal","Navbar","ListVideoShared","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6e7005e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n// import { useQuery } from '../../hooks';\n\nconst Context = React.createContext();\nconst ContextConsumner = Context.Consumer;\n\nconst ContextProvider = props => {\n    const [state] = useState({\n        auth: {\n            status: false\n        }\n    });\n\n    return <Context.Provider value={state}>{props.children}</Context.Provider>;\n};\n\nexport { Context, ContextConsumner, ContextProvider };\n","export default {\n    // baseurl: 'http://localhost:7001/graphql'\n    baseurl: 'https://mighty-island-16282.herokuapp.com/graphql'\n};\n","import { useState } from 'react';\nimport axios from 'axios';\nimport api from '../api';\n\nconst useQuery = (query, { variables = {} } = {}) => {\n    const [state, setState] = useState({\n        data: null,\n        loading: true\n    });\n\n    const runQuery = async () => {\n        const queryResult = await axios.post(\n            api.baseurl,\n            JSON.stringify({ query, variables }),\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json',\n                    Authorization: localStorage.getItem('utubvideotoken') || ''\n                }\n            }\n        );\n        setState({ data: queryResult.data, loading: false });\n    };\n    if (state.loading && !state.data) runQuery();\n\n    const refetch = () => setState({ data: null, loading: true });\n\n    const { data, loading } = state;\n    return { data, loading, refetch };\n};\n\nexport default useQuery;\n","// import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport api from '../api';\n\nconst useMutation = query => {\n    const runQuery = async ({ variables, upload: callback }) => {\n        const mutationResult = await axios.post(\n            api.baseurl,\n            JSON.stringify({ query, variables }),\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json',\n                    Authorization: localStorage.getItem('utubvideotoken') || ''\n                }\n            }\n        );\n        callback(mutationResult.data);\n    };\n\n    return [runQuery];\n};\n\nexport default useMutation;\n","import { useState, useEffect } from 'react';\n\nconst useForm = (initValue, validations, onSubmit) => {\n    const [state, setState] = useState(initValue);\n    const [disable, setDisable] = useState(true);\n\n    const checkError = (value, validator) => {\n        if (validator.required && value === '') {\n            return validator.requiredWarning || 'This field is required!';\n        }\n        if (validator.regex) {\n            return validator.regex.exec(value)\n                ? ''\n                : validator.regexWarning || 'Invalid value';\n        }\n        return '';\n    };\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        setState({\n            ...state,\n            [name]: { value, error: checkError(value, validations[name]) }\n        });\n    };\n\n    useEffect(() => {\n        const isDirty =\n            Object.keys(state).filter(key => {\n                if (validations[key].required && state[key].value === '')\n                    return true;\n                return state[key].error !== '';\n            }).length !== 0;\n        setDisable(isDirty);\n    }, [state, validations]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const dataSubmitFromState = Object.keys(state).reduce((object, key) => {\n            object[key] = state[key].value;\n            return object;\n        }, {});\n        onSubmit(dataSubmitFromState);\n    };\n\n    return { state, handleChange, handleSubmit, disable };\n};\nexport default useForm;\n","export default {\n    query: {\n        getUser: `\n            query GetUser {\n                getUser {\n                    success\n                    error\n                    user {\n                        email\n                    }\n                }\n            }\n        `,\n        getAllVideo: `\n            query GetAllVideo {\n                getAllVideo {\n                    success\n                    allVideo {\n                        _id\n                        email\n                        videoId\n                        title\n                        description\n                    }\n                }\n            }\n        `\n    },\n    mutation: {\n        login: `\n            mutation UserLogin($email: String!, $password: String!) {\n                login(user: {email: $email, password: $password}) {\n                    success\n                    token\n                    error\n                }\n            }   \n        `,\n        addUser: `\n            mutation AddUser($email: String!, $password: String!) {\n                addUser(user: { email: $email, password: $password }) {\n                    success\n                    error\n                    user {\n                        email\n                    }\n                }\n            }\n        `,\n        addVideo: `\n            mutation AddVideo($email: String!, $videoId: String!, $title: String!, $description: String) {\n                addVideo(video: { email: $email, videoId: $videoId, title: $title, description: $description }) {\n                    success\n                    error\n                    video {\n                        email\n                        videoId\n                        title\n                        description\n                    }\n                }\n            }\n        `,\n        deleteVideo: `\n            mutation DeleteVideo($_id: String!) {\n                deleteVideo(video: {_id: $_id}) {\n                    success\n                    error\n                }\n            }\n        `\n    }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\n\nimport { useMutation } from '../hooks';\nimport queries from '../graphql/queries';\n\nimport { useForm } from '../hooks';\n\nconst Wrapper = styled.div`\n    display: flex;\n    position: fixed;\n    justify-content: flex-end;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 12px;\n    background: white;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);\n`;\n\nconst InputBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n`;\n\nconst Input = styled.input`\n    font-size: 12px;\n    height: 16px;\n    outline: none;\n    padding: 4px;\n    border: 1px solid rgba(100, 100, 100, 0.12);\n`;\n\nconst Welcome = styled.div`\n    font-size: 13px;\n    padding: 4px;\n`;\n\nconst SubmitBtn = styled.button`\n    border: none;\n    background: dodgerblue;\n    color: white;\n    font-size: 13px;\n    cursor: pointer;\n    margin: 0 2px;\n\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n`;\n\nconst Error = styled.div`\n    position: absolute;\n    top: 104%;\n    font-size: 12px;\n    color: tomato;\n`;\n\nexport default ({ toggleModal, userQueried }) => {\n    const initFields = {\n        email: { value: '', error: '' },\n        password: { value: '', error: '' }\n    };\n\n    const validations = {\n        email: {\n            required: true,\n            // eslint-disable-next-line\n            regex: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g,\n            regexWarning: 'Invalid email address'\n        },\n        password: {\n            required: true\n        }\n    };\n\n    const { state, handleChange, disable } = useForm(\n        initFields,\n        validations,\n        () => {}\n    );\n\n    const [loginHook] = useMutation(queries.mutation.login);\n    const _handleLogin = () => {\n        localStorage.removeItem('utubvideotoken');\n        loginHook({\n            variables: {\n                email: state.email.value,\n                password: state.password.value\n            },\n            upload: mutationResult => {\n                const { login } = mutationResult.data;\n                if (login.success) {\n                    localStorage.setItem('utubvideotoken', login.token);\n                    userQueried.refetch();\n                } else {\n                    toast(login.error);\n                }\n            }\n        });\n    };\n\n    const [registerHook] = useMutation(queries.mutation.addUser);\n    const _handleRegister = () => {\n        registerHook({\n            variables: {\n                email: state.email.value,\n                password: state.password.value\n            },\n            upload: mutationResult => {\n                if (mutationResult.data.addUser.success) {\n                    toast('Account created successfully!');\n                }\n                toast(mutationResult.data.addUser.error);\n            }\n        });\n    };\n\n    const _handleLogout = () => {\n        localStorage.removeItem('utubvideotoken');\n        userQueried.refetch();\n    };\n\n    if (userQueried.data.data.getUser.success) {\n        return (\n            <>\n                <Wrapper>\n                    <Welcome>\n                        Welcome{' '}\n                        <b>{userQueried.data.data.getUser.user.email}</b>\n                    </Welcome>\n                    <SubmitBtn onClick={toggleModal(true)}>\n                        Share a video\n                    </SubmitBtn>\n                    <SubmitBtn onClick={_handleLogout}>Log out</SubmitBtn>\n                </Wrapper>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Wrapper>\n                <InputBox>\n                    <Input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"email\"\n                        value={state.email.value}\n                        onChange={handleChange}\n                    />\n                    <Error>{state.email.error}</Error>\n                </InputBox>\n                <InputBox>\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"password\"\n                        value={state.password.value}\n                        onChange={handleChange}\n                    />\n                    <Error>{state.password.error}</Error>\n                </InputBox>\n                <SubmitBtn onClick={_handleLogin} disabled={disable}>\n                    Login\n                </SubmitBtn>\n                <SubmitBtn onClick={_handleRegister} disabled={disable}>\n                    Register\n                </SubmitBtn>\n            </Wrapper>\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport queries from '../graphql/queries';\nimport { useMutation, useForm } from '../hooks';\nimport getVideoId from '../utils/youtubeUrlParser';\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 1rem;\n    border-radius: 8px;\n    background: white;\n    z-index: 100;\n    width: 500px;\n`;\n\nconst Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.4);\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    font-size: 14px;\n    padding: 4px;\n    margin: 2px;\n    border: 1px solid rgba(100, 100, 100, 0.4);\n    border-radius: 2px;\n`;\n\nconst TextArea = styled.textarea`\n    font-size: 14px;\n    padding: 4px;\n    margin: 2px;\n    border: 1px solid rgba(100, 100, 100, 0.4);\n    border-radius: 2px;\n`;\n\nconst SubmitBtn = styled.button`\n    font-size: 15px;\n    padding: 4px;\n    background: dodgerblue;\n    color: white;\n    border: none;\n    border-radius: 2px;\n    margin-top: 6px;\n    cursor: pointer;\n\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n`;\n\nconst Error = styled.div`\n    font-size: 12px;\n    color: tomato;\n    font-style: italic;\n`;\n\nexport default ({ toggleModal, email, refetchVideoList }) => {\n    const initFeilds = {\n        url: {\n            value: '',\n            error: ''\n        },\n        title: {\n            value: '',\n            error: ''\n        },\n        description: {\n            value: '',\n            error: ''\n        }\n    };\n\n    const validations = {\n        url: {\n            required: true,\n            regex: /youtube\\.com\\/watch\\?v=.+/g,\n            regexWarning: 'Please enter valid youtube url!'\n        },\n        title: {\n            required: true\n        },\n        description: {\n            required: false\n        }\n    };\n\n    const [addVideoHook] = useMutation(queries.mutation.addVideo);\n    const _onSubmit = ({ url, title, description }) => {\n        const videoId = getVideoId(url);\n        addVideoHook({\n            variables: { email, videoId, title, description },\n            upload: mutationResult => {\n                if (mutationResult.data.addVideo.success) {\n                    refetchVideoList();\n                    toggleModal(false)();\n                }\n            }\n        });\n    };\n\n    const { state, handleChange, handleSubmit, disable } = useForm(\n        initFeilds,\n        validations,\n        _onSubmit\n    );\n\n    return (\n        <>\n            <Wrapper>\n                <Form onSubmit={handleSubmit}>\n                    <h4>Share new video as {email}</h4>\n                    <Input\n                        type=\"text\"\n                        name=\"url\"\n                        placeholder=\"https://www.youtube.com/watch?v=ZeJg...\"\n                        value={state.url.value}\n                        onChange={handleChange}\n                    />\n                    <Error>{state.url.error}</Error>\n                    <Input\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"Video title\"\n                        value={state.title.value}\n                        onChange={handleChange}\n                    />\n                    <Error>{state.title.error}</Error>\n                    <TextArea\n                        type=\"text\"\n                        name=\"description\"\n                        placeholder=\"Video description\"\n                        value={state.description.value}\n                        onChange={handleChange}\n                    />\n                    <SubmitBtn type=\"submit\" disabled={disable}>\n                        Share video\n                    </SubmitBtn>\n                </Form>\n            </Wrapper>\n            <Backdrop onClick={toggleModal(false)} />\n        </>\n    );\n};\n","export default url => {\n    const regex = /watch\\?v=.+/g;\n    const regexResult = regex.exec(url);\n    if (regexResult) {\n        return regexResult[0].split('=')[1];\n    }\n    return '';\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    width: 400px;\n    padding: 1rem;\n    background: white;\n    border-radius: 1rem;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 100;\n`;\n\nconst BackDrop = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.5);\n`;\n\nconst Title = styled.h4`\n    font-size: 24px;\n    font-weight: bold;\n    padding: 12px 0;\n    text-align: center;\n    margin: 0;\n    border-bottom: 1px solid rgba(100, 100, 100, 0.2);\n`;\n\nconst Content = styled.p`\n    margin: 0;\n    padding: 1rem 10px;\n    font-size: 13px;\n    color: gray;\n`;\n\nconst Button = styled.button`\n    font-size: 14px;\n    background: rgba(240, 240, 240, 1);\n    padding: 6px 12px;\n    border-radius: 4px;\n    margin: 6px;\n    border: none;\n\n    &.agree {\n        background: dodgerblue;\n        color: white;\n    }\n`;\n\nconst ButtonBox = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`;\n\nconst Modal = ({ title, agreeMessage, onClose, onConfirm, children }) => {\n    return (\n        <>\n            <Wrapper>\n                <Title>{title}</Title>\n                <Content>{children}</Content>\n                <ButtonBox>\n                    <Button className=\"agree\" onClick={onConfirm}>\n                        {agreeMessage}\n                    </Button>\n                    <Button onClick={onClose}>Cancle</Button>\n                </ButtonBox>\n            </Wrapper>\n            <BackDrop onClick={onClose} />\n        </>\n    );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Youtube from 'react-youtube';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\n\nimport { useQuery, useMutation } from '../hooks';\nimport queries from '../graphql/queries';\n\nimport AddVideoModal from '../components/AddVideoModal';\nimport ConfirmModal from '../components/common/ConfirmModal';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    padding: 4rem 0 0 0;\n`;\n\nconst ListVideo = styled.div`\n    width: 50%;\n`;\n\nconst VideoBox = styled.div`\n    display: flex;\n    background: white;\n    border-radius: 6px;\n    padding: 12px;\n    position: relative;\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.106);\n\n    &:not(:first-child) {\n        margin-top: 1rem;\n    }\n`;\n\nconst DeleteBtn = styled.button`\n    position: absolute;\n    top: 0;\n    right: 0;\n    border: none;\n    background: tomato;\n    color: white;\n    padding: 6px;\n    transform: translate(20%, -20%);\n    cursor: pointer;\n    border-radius: 2px;\n`;\n\nconst VideoInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    order: 2;\n    padding: 0 1rem;\n    height: 200px;\n    flex-grow: 1;\n`;\n\nconst Desc = styled.div`\n    font-size: 13px;\n    color: rgba(100, 100, 100, 1);\n    flex-grow: 1;\n    overflow-y: scroll;\n`;\n\nconst Author = styled.div`\n    color: dodgerblue;\n    font-size: 14px;\n    padding: 12px 0 4px 0;\n`;\n\n//main componnet\nexport default ({ userQueried, modal, toggleModal }) => {\n    const opts = {\n        height: '100%',\n        width: 'auto',\n        playerVars: {\n            autoplay: 0\n        }\n    };\n\n    const { data, loading, refetch } = useQuery(queries.query.getAllVideo);\n    const [confirm, setConfirm] = useState({\n        status: false,\n        data: null\n    });\n    const _handleConfirm = (status, data = null) => () => {\n        setConfirm({ status, data });\n    };\n\n    if (loading) {\n        return <div>Loading videos...</div>;\n    }\n\n    const { allVideo } = data.data.getAllVideo;\n\n    const [deleteVideoHook] = useMutation(queries.mutation.deleteVideo);\n    const _handleDeleteVideo = _id => () => {\n        deleteVideoHook({\n            variables: { _id },\n            upload: mutationResult => {\n                if (mutationResult.data.deleteVideo.success) {\n                    _handleConfirm(false, null)();\n                    toast('Video has been deleted!');\n                    refetch();\n                    return;\n                }\n                toast(`Can't delete video...`);\n            }\n        });\n    };\n\n    return (\n        <>\n            <Wrapper>\n                <ListVideo>\n                    {allVideo.length > 0 ? (\n                        allVideo.map((video, i) => (\n                            <VideoBox key={i}>\n                                <Youtube videoId={video.videoId} opts={opts} />\n                                <VideoInfo>\n                                    <h3 style={{ margin: '0 0 6px 0' }}>\n                                        {video.title}\n                                    </h3>\n                                    <Desc>{video.description}</Desc>\n                                    <Author>Shared by {video.email}</Author>\n                                </VideoInfo>\n                                {userQueried.data.data.getUser.success &&\n                                    video.email ===\n                                        userQueried.data.data.getUser.user\n                                            .email && (\n                                        <DeleteBtn\n                                            onClick={_handleConfirm(\n                                                true,\n                                                video._id\n                                            )}\n                                        >\n                                            Delete\n                                        </DeleteBtn>\n                                    )}\n                            </VideoBox>\n                        ))\n                    ) : (\n                        <div>No videos here...</div>\n                    )}\n                </ListVideo>\n            </Wrapper>\n            {modal && (\n                <AddVideoModal\n                    toggleModal={toggleModal}\n                    email={userQueried.data.data.getUser.user.email}\n                    refetchVideoList={refetch}\n                />\n            )}\n            {confirm.status && (\n                <ConfirmModal\n                    title=\"Delete video\"\n                    agreeMessage=\"Delete\"\n                    onClose={_handleConfirm(false)}\n                    onConfirm={_handleDeleteVideo(confirm.data)}\n                >\n                    You really want to delete this video?\n                </ConfirmModal>\n            )}\n        </>\n    );\n};\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nimport { ContextProvider } from './components/common/context';\nimport Navbar from './components/Navbar';\nimport ListVideoShared from './components/ListVideoShared';\n\nimport { useQuery } from './hooks';\nimport queries from './graphql/queries';\n\ntoast.configure({\n    autoClose: 2000\n});\n\nconst App = () => {\n    const [modal, setModal] = useState(false);\n    const _toggleModal = status => () => setModal(status);\n\n    const userQueried = useQuery(queries.query.getUser);\n\n    if (userQueried.loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <ContextProvider>\n            <div>\n                <Navbar toggleModal={_toggleModal} userQueried={userQueried} />\n                <ListVideoShared\n                    modal={modal}\n                    toggleModal={_toggleModal}\n                    userQueried={userQueried}\n                />\n            </div>\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}